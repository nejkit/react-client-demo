
import type { SaveActivityRequestDto } from "../types/activity";
import {saveUserActivity} from "../services/activity.ts";

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
 * –ë–µ—Ä—ë—Ç userId –∏–∑ localStorage, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é.
 */
export function withUserActivity(eventType: string) {
    return function(
        _target: object,
        _propertyKey: string | symbol,
        descriptor: PropertyDescriptor
    ) {
        const originalMethod = descriptor.value;

        if (typeof originalMethod !== "function") {
            throw new Error(`@withUserActivity –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –∫ –º–µ—Ç–æ–¥–∞–º, –∞ –Ω–µ –∫ ${typeof originalMethod}`);
        }

        descriptor.value = function (...args: unknown[]): unknown {
            // üß† –¥–æ—Å—Ç–∞—ë–º userId –∏–∑ localStorage
            const userId = localStorage.getItem("userId") ?? "anonymous";

            const metadata = buildActivityMetadata()

            const payload: SaveActivityRequestDto = {
                userId,
                action: eventType,
                metadata,
            };

            // üöÄ fire-and-forget
            void saveUserActivity(payload);

            // –≤—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            return originalMethod.apply(this, args);
        };
    };
}

export function buildActivityMetadata(
): Record<string, unknown> {
    return {
        page: window.location.pathname,
        element: document.activeElement?.tagName?.toLowerCase() ?? null,
        elementId: document.activeElement?.id ?? null,
    };
}